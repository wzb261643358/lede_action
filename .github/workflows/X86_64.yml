
name: X86_64自动编译

on:
  push:
    branches: [ main ]
  schedule:
    - cron:  30 15 * * Mon

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h

      - name: Download lede
        run: |
          git clone https://github.com/coolsnowwolf/lede
          mv ./lede/* ./
      - name: Install addons
        run: |
          echo "src-git helloworld https://github.com/fw876/helloworld" >> ./feeds.conf.default 
      - name: Update feeds
        run: |
          git clone https://github.com/esirplayground/luci-app-poweroff.git package/lean/uci-app-poweroff
          git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git
          rm -rf package/lean/luci-theme-argon && mv luci-theme-argon package/lean/
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Costom configure file
        run: |
          rm -f ./.config*
          touch ./.config
          cat >> .config <<EOF
          # Device type
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y

          # Gzip
          CONFIG_TARGET_IMAGES_GZIP=y
          # IPv6
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_ipv6helper=y
          # USB support
          ONFIG_PACKAGE_kmod-usb-core=y
          CONFIG_PACKAGE_kmod-usb3=y
          CONFIG_PACKAGE_kmod-usb-storage=y
          CONFIG_PACKAGE_kmod-usb-storage-extras=y
          CONFIG_PACKAGE_automount=y
          
          # Filesystem
          CONFIG_PACKAGE_kmod-fs-exfat=y
          CONFIG_PACKAGE_kmod-fs-ext4=y
          CONFIG_PACKAGE_kmod-fs-ntfs=y
          
          # APP
          # CONFIG_PACKAGE_luci-app-unblockmusic is not set
          # CONFIG_PACKAGE_luci-app-mwan3 is not set
          # CONFIG_PACKAGE_luci-app-adbyby-plus is not set
          # CONFIG_UnblockNeteaseMusic_Go is not set
          # CONFIG_UnblockNeteaseMusic_NodeJS is not set
          # CONFIG_PACKAGE_luci-app-aliddns is not set
          # CONFIG_PACKAGE_luci-app-accesscontrol is not set
          # CONFIG_PACKAGE_luci-app-wireguard is not set
          # CONFIG_PACKAGE_luci-app-baidupcs-web is not set
          # CONFIG_PACKAGE_luci-app-filetransfer is not set
          # CONFIG_PACKAGE_luci-app-openvpn is not set
          # CONFIG_PACKAGE_luci-app-ttyd is not set
          # CONFIG_PACKAGE_luci-app-syncdial=y
          # CONFIG_PACKAGE_luci-app-usb-printer=y
          # CONFIG_PACKAGE_luci-app-nlbwmon is not set
          # CONFIG_PACKAGE_luci-app-xlnetacc is not set
          # CONFIG_PACKAGE_nlbwmon is not set
          # CONFIG_PACKAGE_luci-app-ipsec-vpnd is not set
          # CONFIG_PACKAGE_luci-app-zerotier is not set
          CONFIG_PACKAGE_luci-app-poweroff=y
          CONFIG_PACKAGE_luci-app-webadmin=y
          CONFIG_PACKAGE_luci-app-ddns=y
          CONFIG_PACKAGE_ddns-scripts_aliyun=y
          CONFIG_PACKAGE_ddns-scripts_cloudflare.com-v4=y
          CONFIG_PACKAGE_luci-app-aria2=y
          CONFIG_PACKAGE_nginx=y
          CONFIG_PACKAGE_luci-app-upnp=y
          CONFIG_PACKAGE_luci-app-docker=y
          CONFIG_PACKAGE_luci-app-frpc=y
          CONFIG_PACKAGE_luci-app-vsftpd=y
          CONFIG_PACKAGE_luci-app-samba=y
          CONFIG_PACKAGE_openssh-sftp-server=y
          CONFIG_PACKAGE_luci-app-transmission=y
          CONFIG_PACKAGE_luci-app-ssr-plus=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Simple_obfs=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray_plugin=y
          
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-theme-netgear=y
          CONFIG_PACKAGE_luci-theme-bootstrap=y
          # Open source WIFI driver
          CONFIG_PACKAGE_kmod-mt7603=y
          CONFIG_PACKAGE_kmod-mt7603e=n
          CONFIG_PACKAGE_kmod-mt76x2=y
          CONFIG_PACKAGE_kmod-mt76x2e=n
          CONFIG_PACKAGE_hostapd-common=y
          CONFIG_PACKAGE_wpad-openssl=y
          CONFIG_PACKAGE_luci-app-mtwifi=n
          
          EOF
          
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
      - name: Make download
        run: |
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h
      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true
      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
