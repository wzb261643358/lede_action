name: r5s测试编译

on:
  push:
    branches: [ main ]
  schedule:
    - cron:  30 15 * * Mon

jobs:

  build:

    runs-on: ubuntu-18.04
    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: main

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk
      - name: download Friendlywrt
        run: |
          mkdir friendlywrt21-rk3568
          cd friendlywrt21-rk3568
          git clone https://github.com/friendlyarm/repo --depth 1 tools
          tools/repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v21.02 \
                  -m rk3568.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle
          tools/repo sync -c  --no-clone-bundle
          pwd
          ls
          pwd
          ls friendlywrt
      - name: Compile firmware
        run: |
          cd friendlywrt21-rk3568
          ./build.sh nanopi_r5s.mk
          pwd
          ls
          pwd
          ls friendlywrt
          find ./ -name *.img 
      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./ -type d -name "packages")
          cp -rf $(find ./friendlywrt21-rk3568/scripts/sd-fuse/out/ -type f -name "*.img") ./artifact/firmware/
          cp -rf $(find ./friendlywrt21-rk3568/scripts/sd-fuse/friendlywrt21/ -type f -name "*.img") ./artifact/firmware/
          cp -rf $(find ./ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./artifact/firmware

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
